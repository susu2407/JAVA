package sub1;
/*
 * 날짜 : 2025/07/24
 * 이름 : 이수연
 * 내용 : 자바 람다식 실습하기
 */
@FunctionalInterface
interface A {
	public int method(int a, int b);
}
@FunctionalInterface
interface B {
	public void method(double a);
}
@FunctionalInterface
interface C {
	public boolean method();
}
@FunctionalInterface
interface D {
	public void method();
}
@FunctionalInterface
interface E {
	public double method(double num);
}

public class LambdaTest {
	
	public static void main(String[] args) {
		
		// 람다식 정의
		A a1 = (int a, int b) -> {
			int c = a + b;
			return c;			
		};
		
		// 람다식 정의 - 간단.ver
		A a2 = (a, b) -> {
			return a + b;
		};
		
		// 람다식 정의 - 극단적.간단.ver
		A a3 = (a, b) -> a + b; // {중괄호} 생략은 return 
		
		// 람다식 호출
		int r1 = a1.method(1, 2);
		int r2 = a2.method(2, 3);
		int r3 = a3.method(3, 4);
		
		System.out.println("r1 : " + r1);
		System.out.println("r2 : " + r2);
		System.out.println("r3 : " + r3);
		
		//------interface B~E 생성 후,------
		
		// B 인터페이스 람다식 정의
		B b1 = (double a) -> {
			System.out.println("b1 - a : " + a);
		};
		
		B b2 = a -> System.out.println("b2 - a : " + a);; // (), {} 값이 하나일 때는 생략 가능
		B b3 = System.out::println; // 메서드 참조
		
		b1.method(1);
		b2.method(2);
		b3.method(3);
		
		
		
		
		
		
		
		
		
		
		// C 인터페이스 람다식 정의
		
		// D 인터페이스 람다식 정의
		
		
		// E 인터페이스 람다식 정의
		
		
		
		
		
		
	}

}
